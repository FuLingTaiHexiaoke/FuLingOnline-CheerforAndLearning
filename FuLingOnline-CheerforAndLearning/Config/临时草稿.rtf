{\rtf1\ansi\ansicpg936\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red100\green56\blue32;\red196\green26\blue22;
\red170\green13\blue145;\red63\green110\blue116;\red92\green38\blue153;\red46\green13\blue110;\red28\green0\blue207;
}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  FLXKTabBarBaseNavigationController.m\cf0 \
\cf2 //  FuLingOnline-CheerforAndLearning\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by xiaoke on 17/3/18.\cf0 \
\cf2 //  Copyright \'a9 2017
\f1 \'c4\'ea
\f0  com.FuLing. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\cf3 #import \cf4 "FLXKTabBarBaseNavigationController.h"\cf3 \
\cf0 \
\cf3 #import \cf4 "UINavigationBar+Awesome.h"\cf3 \
\cf0 \
\cf5 @interface\cf0  \cf6 FLXKTabBarBaseNavigationController\cf0  ()<\cf7 UINavigationControllerDelegate\cf0 >\
\
\cf5 @end\cf0 \
\
\cf5 @implementation\cf0  FLXKTabBarBaseNavigationController\
\
\cf3 #pragma mark -\
#pragma mark - ViewController LifeCircle\
\cf0 \
- (\cf5 void\cf0 )viewDidLoad \{\
    [\cf5 super\cf0  \cf8 viewDidLoad\cf0 ];\
    \cf5 self\cf0 .\cf7 delegate\cf0 =\cf5 self\cf0 ;\
\}\
\
- (\cf5 void\cf0 )didReceiveMemoryWarning \{\
    [\cf5 super\cf0  \cf8 didReceiveMemoryWarning\cf0 ];\
    \cf2 // Dispose of any resources that can be recreated.\cf0 \
\}\
\
\
\cf3 #pragma mark -\
#pragma mark - UINavigationControllerDelegate\
\cf0 \
\cf2 //- (void)navigationController:(UINavigationController *)navigationController willShowViewController:(UIViewController *)viewController animated:(BOOL)animated\{\cf0 \
\cf2 //    if (self.childViewControllers.count==1) \{\cf0 \
\cf2 //        [self.navigationBar setBarTintColor:[UIColor orangeColor]];\cf0 \
\cf2 //    \}\cf0 \
\cf2 //    else\{\cf0 \
\cf2 //        [self.navigationBar setBarTintColor:[UIColor lightGrayColor]];\cf0 \
\cf2 //    \}\cf0 \
\cf2 //\}\cf0 \
\
\cf3 #pragma mark - <UINavigationControllerDelegate>\
\cf0 \
- (\cf5 void\cf0 )navigationController:(\cf7 UINavigationController\cf0  *)navigationController willShowViewController:(\cf7 UIViewController\cf0  *)viewController animated:(\cf5 BOOL\cf0 )animated \{\
    \
\
    \
     \cf5 id\cf0 <\cf7 UIViewControllerTransitionCoordinator\cf0 > transitionCoordinator = navigationController.\cf7 topViewController\cf0 .\cf7 transitionCoordinator\cf0 ;\
    \
    \
\cf2 //        [transitionCoordinator animateAlongsideTransition:^(id<UIViewControllerTransitionCoordinatorContext>  _Nonnull context) \{\cf0 \
\cf2 //            if (context.isInteractive) \{\cf0 \
\cf2 //                if (self.childViewControllers.count==1) \{\cf0 \
\cf2 ////                    [[self.navigationBar subviews] enumerateObjectsUsingBlock:^(__kindof UIView * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) \{\cf0 \
\cf2 ////                        NSLog(@"idx:%lu,obj:%@",(unsigned long)idx,obj);\cf0 \
\cf2 ////                    \}];\cf0 \
\cf2 //                    \cf0 \
\cf2 //                    [[[self.navigationBar subviews] objectAtIndex:0] setBackgroundColor:[UIColor orangeColor]];\cf0 \
\cf2 //                    [self.navigationBar setTintColor:[UIColor whiteColor]];\cf0 \
\cf2 //                \}\cf0 \
\cf2 //                else\{\cf0 \
\cf2 //                    \cf0 \
\cf2 //                    [self.navigationBar setBarTintColor:[UIColor lightGrayColor]];\cf0 \
\cf2 //                    [self.navigationBar setTintColor:[UIColor whiteColor]];\cf0 \
\cf2 //                \}\cf0 \
\cf2 //            \}\cf0 \
\cf2 //            else\{\cf0 \
\cf2 //                if (self.childViewControllers.count==1) \{\cf0 \
\cf2 //                    [self.navigationBar setBarTintColor:[UIColor orangeColor]];\cf0 \
\cf2 //                    [[self.navigationBar subviews] enumerateObjectsUsingBlock:^(__kindof UIView * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) \{\cf0 \
\cf2 //                        NSLog(@"idx:%lu,obj:%@",(unsigned long)idx,obj);\cf0 \
\cf2 //                    \}];\cf0 \
\cf2 //                    \cf0 \
\cf2 //                    [[[self.navigationBar subviews] objectAtIndex:0] setBackgroundColor:[UIColor orangeColor]];\cf0 \
\cf2 //                    [self.navigationBar setTintColor:[UIColor whiteColor]];\cf0 \
\cf2 //                \}\cf0 \
\cf2 //                else\{\cf0 \
\cf2 //                    [self.navigationBar setBarTintColor:[UIColor lightGrayColor]];\cf0 \
\cf2 //                    [self.navigationBar setTintColor:[UIColor whiteColor]];\cf0 \
\cf2 //                \}\cf0 \
\cf2 //            \}\cf0 \
\cf2 //  \cf0 \
\cf2 //    \cf0 \
\cf2 //        \} completion:^(id<UIViewControllerTransitionCoordinatorContext>  _Nonnull context) \{\cf0 \
\cf2 //    \cf0 \
\cf2 //        \}];\cf0 \
    \
    \
    \cf5 if\cf0  (\cf5 self\cf0 .\cf7 childViewControllers\cf0 .\cf7 count\cf0 ==\cf9 1\cf0 ) \{\
\cf2 //                    [self.navigationBar setBackgroundColor:[UIColor orangeColor]];\cf0 \
        \cf2 //    //navigation bar\cf0 \
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setBarTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 orangeColor\cf0 ]];\
        [[\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 subviews\cf0 ] \cf8 enumerateObjectsUsingBlock\cf0 :^(\cf5 __kindof\cf0  \cf7 UIView\cf0  * \cf5 _Nonnull\cf0  obj, \cf7 NSUInteger\cf0  idx, \cf5 BOOL\cf0  * \cf5 _Nonnull\cf0  stop) \{\
            \cf3 NSLog\cf0 (\cf4 @"idx:%lu,obj:%@"\cf0 ,(\cf5 unsigned\cf0  \cf5 long\cf0 )idx,obj);\
        \}];\
        \
            [[[\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 subviews\cf0 ] \cf8 objectAtIndex\cf0 :\cf9 0\cf0 ] \cf8 setBackgroundColor\cf0 :[\cf7 UIColor\cf0  \cf8 orangeColor\cf0 ]];\
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 whiteColor\cf0 ]];\
\cf2 //        [self.navigationBar lt_setBackgroundColor:[UIColor orangeColor]];\cf0 \
        \cf2 //                [self.navigationController.navigationBar setShadowImage:[UIImage new]];\cf0 \
    \}\
    \cf5 else\cf0 \{\
        \cf2 //            [self.navigationController.navigationBar lt_reset];\cf0 \
                    [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setBarTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 lightGrayColor\cf0 ]];\
        \
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 whiteColor\cf0 ]];\
\cf2 //        [self.navigationBar lt_setBackgroundColor:[UIColor lightGrayColor]];\cf0 \
        \
        \
    \}\
    \
    \
    \
    \cf2 // This code is responsible for adjusting the correct navigation bar style when the user starts a side swipe gesture, but does not finish it.\cf0 \
\cf2 //    id<UIViewControllerTransitionCoordinator> transitionCoordinator = navigationController.topViewController.transitionCoordinator;\cf0 \
    [transitionCoordinator \cf8 notifyWhenInteractionEndsUsingBlock\cf0 :^(\cf5 id\cf0 <\cf7 UIViewControllerTransitionCoordinatorContext\cf0 > context) \{\
        \cf5 if\cf0  ([context \cf8 isCancelled\cf0 ]) \{\
            \cf7 UIViewController\cf0  *sourceViewController = [context \cf8 viewControllerForKey\cf0 :\cf7 UITransitionContextFromViewControllerKey\cf0 ];\
            \cf2 //            [self updateNavigationBarVisibilityForController:sourceViewController animated:NO];\cf0 \
            [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setBarTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 lightGrayColor\cf0 ]];\
            [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 whiteColor\cf0 ]];\
\cf2 //            [self.navigationBar lt_setBackgroundColor:[UIColor lightGrayColor]];\cf0 \
        \}\
    \}];\
    \
    \cf2 //    [transitionCoordinator animateAlongsideTransition:^(id<UIViewControllerTransitionCoordinatorContext>  _Nonnull context) \{\cf0 \
    \cf2 //\cf0 \
    \cf2 //\cf0 \
    \cf2 //    \} completion:^(id<UIViewControllerTransitionCoordinatorContext>  _Nonnull context) \{\cf0 \
    \cf2 //\cf0 \
    \cf2 //    \}];\cf0 \
    \
\}\
\
\
- (\cf5 void\cf0 )navigationController:(\cf7 UINavigationController\cf0  *)navigationController didShowViewController:(\cf7 UIViewController\cf0  *)viewController animated:(\cf5 BOOL\cf0 )animated\{\
    \cf2 //    if (self.childViewControllers.count==1) \{\cf0 \
    \cf2 //        [self.navigationBar setBarTintColor:[UIColor orangeColor]];\cf0 \
    \cf2 //    \}\cf0 \
    \cf2 //    else\{\cf0 \
    \cf2 //        [self.navigationBar setBarTintColor:[UIColor lightGrayColor]];\cf0 \
    \cf2 //    \}\cf0 \
    \
    \cf5 if\cf0  (\cf5 self\cf0 .\cf7 childViewControllers\cf0 .\cf7 count\cf0 ==\cf9 1\cf0 ) \{\
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setBarTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 orangeColor\cf0 ]];\
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 whiteColor\cf0 ]];\
    \}\
    \
\}\
\
\cf3 #pragma mark -\
#pragma mark - Public Methods\
\cf0 \
\cf2 //\cf0 \
\cf2 //-(void)pushViewController:(UIViewController *)viewController animated:(BOOL)animated\{\cf0 \
\cf2 //    viewController.hidesBottomBarWhenPushed=YES;\cf0 \
\cf2 //    [super pushViewController:viewController animated:animated];\cf0 \
\cf2 //\}\cf0 \
\
\cf3 #pragma mark -\
#pragma mark - Private Methods\
\cf0 \
\cf5 @end\cf0 \
\
\
\
\cf3 #pragma mark - <UINavigationControllerDelegate>\
\cf0 \
- (\cf5 void\cf0 )navigationController:(\cf7 UINavigationController\cf0  *)navigationController willShowViewController:(\cf7 UIViewController\cf0  *)viewController animated:(\cf5 BOOL\cf0 )animated \{\
    \cf5 if\cf0  (\cf5 self\cf0 .\cf7 childViewControllers\cf0 .\cf7 count\cf0 ==\cf9 1\cf0 ) \{\
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setBarTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 orangeColor\cf0 ]];\
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 whiteColor\cf0 ]];\
    \}\
    \cf5 else\cf0 \{\
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setBarTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 lightGrayColor\cf0 ]];\
        [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 whiteColor\cf0 ]];\
    \}\
    \
    \cf2 // This code is responsible for adjusting the correct navigation bar style when the user starts a side swipe gesture, but does not finish it.\cf0 \
    \cf5 id\cf0 <\cf7 UIViewControllerTransitionCoordinator\cf0 > transitionCoordinator = navigationController.\cf7 topViewController\cf0 .\cf7 transitionCoordinator\cf0 ;\
    [transitionCoordinator \cf8 notifyWhenInteractionEndsUsingBlock\cf0 :^(\cf5 id\cf0 <\cf7 UIViewControllerTransitionCoordinatorContext\cf0 > context) \{\
        \cf5 if\cf0  ([context \cf8 isCancelled\cf0 ]) \{\
            \cf7 UIViewController\cf0  *sourceViewController = [context \cf8 viewControllerForKey\cf0 :\cf7 UITransitionContextFromViewControllerKey\cf0 ];\
            [\cf5 self\cf0 .\cf7 navigationBar\cf0  \cf8 setBarTintColor\cf0 :[\cf7 UIColor\cf0  \cf8 lightGrayColor\cf0 ]];\
        \}\
    \}];\
    \
\}\
\
\
- (\cf5 void\cf0 )navigationController:(\cf7 UINavigationController\cf0  *)navigationController didShowViewController:(\cf7 UIViewController\cf0  *)viewController animated:(\cf5 BOOL\cf0 )animated\{\
    \cf2 //    if (self.childViewControllers.count==1) \{\cf0 \
    \cf2 //        [self.navigationBar setBarTintColor:[UIColor orangeColor]];\cf0 \
    \cf2 //    \}\cf0 \
    \cf2 //    else\{\cf0 \
    \cf2 //        [self.navigationBar setBarTintColor:[UIColor lightGrayColor]];\cf0 \
    \cf2 //    \}\cf0 \
    \
\}}